apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sqlpad
  labels:
    app: sqlpad
spec:
  serviceName: "sqlpad"
  selector:
    matchLabels:
      app: sqlpad
  replicas: 1
  template:
    metadata:
      labels:
        app: sqlpad
    spec:
      containers:
        - name: sqlpad
          image: sqlpad/sqlpad:6.11.1
          ports:
            - containerPort: 35217
          env:
          - name: SQLPAD_ADMIN
            value: "admin@sqlpad.com"
          - name: SQLPAD_ADMIN_PASSWORD
            value: "admin"
          - name: SQLPAD_APP_LOG_LEVEL
            value: "info"
          - name: SQLPAD_WEB_LOG_LEVEL
            value: "warn"
          - name: SQLPAD_CONNECTIONS__sqlserverdemo__name
            value: "SQL Server Demo"
          - name: SQLPAD_CONNECTIONS__sqlserverdemo__driver
            value: "sqlserver"
          - name: SQLPAD_CONNECTIONS__sqlserverdemo__host
            value: "mssql"
          - name: SQLPAD_CONNECTIONS__sqlserverdemo__database
            value: "master"
          - name: SQLPAD_CONNECTIONS__sqlserverdemo__username
            value: "sa"
          - name: SQLPAD_CONNECTIONS__sqlserverdemo__password
            value: 'M$$sqlPassword'
          - name: SQLPAD_PORT
            value: "3000"
      volumeMounts:
        - mountPath: /var/lib/sqlpad/
          name: sqlpaddata
      serviceAccount: sa-with-anyuid
    volumeClaimTemplates:
    - metadata:
        name: sqlpaddata
      labels:
        app: sqlpad
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 500Mi
        
---
apiVersion: v1
kind: Service
metadata:
  name: sqlpad
spec:
  selector:
    app: sqlpad
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: sqlpad
spec:
  subdomain: ''
  to:
    kind: Service
    name: sqlpad
    weight: 100
  port:
    targetPort: 3000
  wildcardPolicy: None

---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: sa-with-anyuid
  namespace: kafka

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: 'system:openshift:scc:anyuid'
subjects:
  - kind: ServiceAccount
    name: sa-with-anyuid
    namespace: kafka
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'system:openshift:scc:anyuid'


#https://github.com/sqlpad/sqlpad/blob/master/docker-examples/mssql-docker-compose/docker-compose.yml
#https://github.com/sqlpad/sqlpad